name: Sonar Scanner Frontend
on:
  push:
    branches: ["main", "frontend"]
    paths: 
      - "frontend/**"
  pull_request:
    branches: [ "main", "backend" ]
    paths:
      - 'backend/**'
      
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: latest
          install-chromedriver: true
          install-dependencies: true
        id: setup-chrome
      - run: |
          echo "::set-env name=CHROME_BIN::${{steps.setup-chrome.outputs.chrome-path}}"

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run tests
        working-directory: frontend
        run: npm run test:ci

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: frontend
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
